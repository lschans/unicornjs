var redis = require('redis'),
    busmsg = require('../busmsg/index.js'),
    Promise = require('es6-promise').Promise;

var service = {
    getAnswer: function(service, method, value, config) {

        return new Promise(function(resolve) {

            // This is where we should post crap to the bus and do some async wait thingys
            // Replace this crap and send it over the message bus
            //var msg = busmsg.create(101,'abcdefghijklmnopqrstuvwxyz',202,'serviceID', 'mathResponse', 'GET');

            var msg = {"service_name": 'math', "channel": 'testMathChannel', "data" : [{"value": value.number}], "ack": 0};
            //console.log("valus %s", value.number)
            //msg.data.push = {"value": value.number};
            //create a client
            var client = redis.createClient(config.redis.port, config.redis.server, {});
            var listener = redis.createClient(config.redis.port, config.redis.server, {});

            client.publish('broker', JSON.stringify(msg));
            /* Listener waiting for the answer */
            listener.on("message", function (channel, message) {
                /* Process incoming message and respond to response channel */
                /* listen to the new channel */
                var obj = JSON.parse(message);

                console.log(obj);
                if (obj.ack == 0){
                    //listener.unsubscribe();
                    //listener.end();
                    resolve(obj.result);
                }
            });

            listener.subscribe('testMathChannel');
        });
    }


};

module.exports = service;